<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test</title>
</head>
<style>
    body {
        font-family: 'Montserrat';
    }

    li {
        text-decoration: none;
        list-style-type: none;
    }

    #messages {
        border: #232323 solid 1px;
        border-radius: 8px;
        padding: 15px;
        height: 35vh;
        overflow: scroll;
        overflow-x: hidden;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.10.1.min.js"></script>

<body>
    <div id="messages">
    </div>
    <form action="/" method="POST" id="chatForm">
        <input id="txt" autocomplete="off" autofocus="on"
            placeholder="type your message here..." /><button>Send</button>
    </form>
    <% if(id !== null){ %>
    <p id="instanceID"><%= id %></p>
    <% } %>

    <% if(error !== null){ %>
    <p id="instanceID"><%= error %></p>
    <% } %>
</body>
<script>
    var socket = io.connect('https://accurate-amplified-viburnum.glitch.me/');
    $('form').submit(function (e) {
        e.preventDefault(); // prevents page reloading
        socket.emit('chat_message', rc4($("#instanceID").text(),$('#txt').val()));
        $('#txt').val('');
        return false;
    });
    socket.on('chat_message', function (msg) {
        $('#messages').append($('<li>').html(rc4($("#instanceID").text(), msg)));
    });
    socket.on('is_online', function (username) {
        $('#messages').append($('<li>').html(rc4($("#instanceID").text(), username)));
    });
    var username = prompt('Username:');
    socket.emit('username', rc4($("#instanceID").text(), username));

    function rc4(key, str) {
        var s = [], j = 0, x, res = '';
        for (var i = 0; i < 256; i++) {
            s[i] = i;
        }
        for (i = 0; i < 256; i++) {
            j = (j + s[i] + key.charCodeAt(i % key.length)) % 256;
            x = s[i];
            s[i] = s[j];
            s[j] = x;
        }
        i = 0;
        j = 0;
        for (var y = 0; y < str.length; y++) {
            i = (i + 1) % 256;
            j = (j + s[i]) % 256;
            x = s[i];
            s[i] = s[j];
            s[j] = x;
            res += String.fromCharCode(str.charCodeAt(y) ^ s[(s[i] + s[j]) % 256]);
        }
        return res;
    }
</script>

</html>
